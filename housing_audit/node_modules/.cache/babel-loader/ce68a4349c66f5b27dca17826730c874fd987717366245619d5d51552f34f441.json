{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blare\\\\OneDrive - University of Florida\\\\Desktop\\\\Code projects\\\\Audit-Team\\\\housing_audit\\\\src\\\\protectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [authorized, setAuthorized] = useState(null);\n  useEffect(() => {\n    try {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      if (user && user.role === \"admin\") {\n        setAuthorized(true);\n      } else {\n        setAuthorized(false);\n      }\n    } catch (err) {\n      setAuthorized(false);\n    }\n  }, []);\n  if (authorized === null) return null; // Or a spinner/loading state\n\n  if (!authorized) {\n    alert(\"Access denied: Admins only.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"fHyEyr2oB9gI8+Q7N05mh09OlBA=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","authorized","setAuthorized","user","JSON","parse","localStorage","getItem","role","err","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/blare/OneDrive - University of Florida/Desktop/Code projects/Audit-Team/housing_audit/src/protectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const [authorized, setAuthorized] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (user && user.role === \"admin\") {\r\n        setAuthorized(true);\r\n      } else {\r\n        setAuthorized(false);\r\n      }\r\n    } catch (err) {\r\n      setAuthorized(false);\r\n    }\r\n  }, []);\r\n\r\n  if (authorized === null) return null; // Or a spinner/loading state\r\n\r\n  if (!authorized) {\r\n    alert(\"Access denied: Admins only.\");\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,IAAI,KAAK,OAAO,EAAE;QACjCN,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLA,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZP,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,UAAU,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;;EAEtC,IAAI,CAACA,UAAU,EAAE;IACfS,KAAK,CAAC,6BAA6B,CAAC;IACpC,oBAAOb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOjB,QAAQ;AACjB,CAAC;AAACC,EAAA,CAxBIF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}